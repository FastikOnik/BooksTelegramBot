# handlers/search.py
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from buttons.UserKb import *

from loader import dp
from database import Database

@dp.message_handler(Command("search"))
async def search_books(message: types.Message, state: FSMContext):
    db = Database('library.db')

    search_query = message.get_args()

    if not search_query:
        await message.answer("<b>‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞.</b>", parse_mode="HTML")
        return

    search_results = db.search_books(search_query)

    if not search_results:
        await message.answer("<b>‚ùå –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</b>", parse_mode="HTML")
        return

    result_text = "<b>üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:</b>\n"

    for book in search_results:
        result_text += f"<code>{book[0]}</code>. <b>üìï {book[1]}</b> - <b>üìù {book[2]}</b>\n"

    await message.answer(result_text, parse_mode="HTML", reply_markup=get_books_inline_keyboard(search_results))
